{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Colors.js","webpack:///./src/arrayUtil.js","webpack:///./test/cubeTestData.js","webpack:///./src/index.js","webpack:///./src/cube.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","COLORS","BLUE","YELLOW","RED","GREEN","WHITE","ORANGE","rotate2DArrayClockwise","array","arrayCopy","Array","from","row","length","col","rotate2DArrayAntiClockwise","set2DArrayColorAndReturnOriginal","color","original","cubeTestData","cube","this","cubeFaces","cubeFacesArray","console","log","rotateAntiClock","cubeString","face","getCubeFace","cubeFaceArray","faceString","j","getFormattedCubeFace","setCubeFaces","testCube","asString","right","left","leftInverted","rightInverted"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const COLORS = {\n  BLUE: 'blue',\n  YELLOW: 'yellow',\n  RED: 'red',\n  GREEN: 'green',\n  WHITE: 'white',\n  ORANGE: 'orange',\n}\n","/**\n * Rotates 3x3 array clockwise, in place.\n */\nexport function rotate2DArrayClockwise(array) {\n    let arrayCopy = Array.from(array);\n    for (let row = 0; row < array.length; ++row) {\n        for (let col = 0; col < array[row].length; ++col) {\n            if (row == 0) {\n                array[col][2] = arrayCopy[row][col];\n            } else {\n                array[col][row % 2] = arrayCopy[row][col];\n            }\n        }\n    }\n};\n\n/**\n * Rotates 3x3 array anticlockwise, in place.\n */\nexport function rotate2DArrayAntiClockwise(array) {\n    let arrayCopy = Array.from(array);\n    for (let row = 0; row < array.length; ++row) {\n        for (let col = 0; col < array[row].length; ++col) {\n            array[2-col][row] = arrayCopy[row][col];\n        }\n    }\n     \n};\n\nexport function set2DArrayColorAndReturnOriginal(array, row, col, color) {\n    let original = array[row][col];\n    array[row][col] = color;\n    return original;\n};\n\n","import {COLORS} from '../src/Colors.js';\n\nexport let cubeTestData = {\n    \"testCube\": {\n        \"up\": [\n            [COLORS.WHITE, COLORS.WHITE, COLORS.WHITE],\n            [COLORS.WHITE, COLORS.WHITE, COLORS.WHITE],\n            [COLORS.WHITE, COLORS.WHITE, COLORS.WHITE]\n        ],\n        \"front\": [\n            [COLORS.GREEN, COLORS.GREEN, COLORS.GREEN],\n            [COLORS.GREEN, COLORS.GREEN, COLORS.GREEN],\n            [COLORS.GREEN, COLORS.GREEN, COLORS.GREEN]\n        ],\n        \"down\": [\n            [COLORS.YELLOW, COLORS.YELLOW, COLORS.YELLOW],\n            [COLORS.YELLOW, COLORS.YELLOW, COLORS.YELLOW],\n            [COLORS.YELLOW, COLORS.YELLOW, COLORS.YELLOW]\n        ],\n        \"left\": [\n            [COLORS.ORANGE, COLORS.ORANGE, COLORS.ORANGE],\n            [COLORS.ORANGE, COLORS.ORANGE, COLORS.ORANGE],\n            [COLORS.ORANGE, COLORS.ORANGE, COLORS.ORANGE]\n        ],\n        \"right\": [\n            [COLORS.RED, COLORS.RED, COLORS.RED],\n            [COLORS.RED, COLORS.RED, COLORS.RED],\n            [COLORS.RED, COLORS.RED, COLORS.RED]\n        ],\n        \"back\": [\n            [COLORS.BLUE, COLORS.BLUE, COLORS.BLUE],\n            [COLORS.BLUE, COLORS.BLUE, COLORS.BLUE],\n            [COLORS.BLUE, COLORS.BLUE, COLORS.BLUE]\n        ]\n    }\n};\n","import {RubiksCube} from './cube.js'\nimport {cubeTestData as testData} from '../test/cubeTestData.js'\n\nlet cube = new RubiksCube();\ncube.setCubeFaces(testData.testCube);\nconsole.log(cube.asString);\ncube.right();\ncube.left();\ncube.leftInverted();\ncube.rightInverted();\nconsole.log(cube.asString);\n\n","import {COLORS} from './Colors.js';\nimport {\n    rotate2DArrayAntiClockwise as rotateAnticlock,\n    rotate2DArrayClockwise as rotateClock,\n    set2DArrayColorAndReturnOriginal as setReturn\n} from './arrayUtil.js';\n\nexport class RubiksCube {\n\n    // Western coloring scheme: https://ruwix.com/the-rubiks-cube/japanese-western-color-schemes/\n    constructor() {\n        this.cubeFaces = {\n            \"up\": [\n                [COLORS.WHITE, COLORS.WHITE, COLORS.WHITE],\n                [COLORS.WHITE, COLORS.WHITE, COLORS.WHITE],\n                [COLORS.WHITE, COLORS.WHITE, COLORS.WHITE]\n            ],\n            \"front\": [\n                [COLORS.GREEN, COLORS.GREEN, COLORS.GREEN],\n                [COLORS.GREEN, COLORS.GREEN, COLORS.GREEN],\n                [COLORS.GREEN, COLORS.GREEN, COLORS.GREEN]\n            ],\n            \"down\": [\n                [COLORS.YELLOW, COLORS.YELLOW, COLORS.YELLOW],\n                [COLORS.YELLOW, COLORS.YELLOW, COLORS.YELLOW],\n                [COLORS.YELLOW, COLORS.YELLOW, COLORS.YELLOW]\n            ],\n            \"left\": [\n                [COLORS.ORANGE, COLORS.ORANGE, COLORS.ORANGE],\n                [COLORS.ORANGE, COLORS.ORANGE, COLORS.ORANGE],\n                [COLORS.ORANGE, COLORS.ORANGE, COLORS.ORANGE]\n            ],\n            \"right\": [\n                [COLORS.RED, COLORS.RED, COLORS.RED],\n                [COLORS.RED, COLORS.RED, COLORS.RED],\n                [COLORS.RED, COLORS.RED, COLORS.RED]\n            ],\n            \"back\": [\n                [COLORS.BLUE, COLORS.BLUE, COLORS.BLUE],\n                [COLORS.BLUE, COLORS.BLUE, COLORS.BLUE],\n                [COLORS.BLUE, COLORS.BLUE, COLORS.BLUE]\n            ]\n        };\n    };\n\n    // setter for custom cube faces\n    setCubeFaces (cubeFacesArray) {\n        this.cubeFaces = cubeFacesArray;\n    }\n    \n    //////////////////////////////////////////////////////////\n    // Cube movement methods\n    //////////////////////////////////////////////////////////\n\n    right() {\n        console.log(\"cube.right\");\n        rotateClock(this.cubeFaces['right']);\n\n        // shift entire right side\n        for (let row = 0; row <= 2; ++row) {\n            setReturn(\n                this.cubeFaces['down'],\n                row, 2,\n                setReturn(\n                    this.cubeFaces['back'],\n                    2-row, 0,\n                    setReturn(\n                        this.cubeFaces['up'],\n                        row, 2,\n                        setReturn(\n                            this.cubeFaces['front'],\n                            row, 2,\n                            this.cubeFaces['down'][row][2]\n                        )\n                    )\n                )\n            )\n        }\n    }\n\n    rightInverted() {\n        console.log(\"cube.rightInverted\");\n        rotateAnticlock(this.cubeFaces['right']);\n\n        // shift entire right side\n        for (let row = 0; row <= 2; ++row) {\n            setReturn(\n                this.cubeFaces['up'],\n                row, 2,\n                setReturn(\n                    this.cubeFaces['back'],\n                    2-row, 0,\n                    setReturn(\n                        this.cubeFaces['down'],\n                        row, 2,\n                        setReturn(\n                            this.cubeFaces['front'],\n                            row, 2,\n                            this.cubeFaces['up'][row][2]\n                        )\n                    )\n                )\n            )\n        }\n    }\n\n    left() {\n        console.log(\"cube.left\");\n        rotateClock(this.cubeFaces['left']);\n\n        // shift entire left side\n        for (let row = 0; row <= 2; ++row) {\n            setReturn(\n                this.cubeFaces['up'],\n                row, 0,\n                setReturn(\n                    this.cubeFaces['back'],\n                    2-row, 2,\n                    setReturn(\n                        this.cubeFaces['down'],\n                        row, 0,\n                        setReturn(\n                            this.cubeFaces['front'],\n                            row, 0,\n                            this.cubeFaces['up'][row][0]\n                        )\n                    )\n                )\n            )\n        }\n    }\n\n    leftInverted() {\n        console.log(\"cube.leftInverted\");\n        rotateAnticlock(this.cubeFaces['left']);\n        // shift entire left side\n         \n        for (let row = 0; row <= 2; ++row) {\n            setReturn(\n                this.cubeFaces['down'],\n                row, 0,\n                setReturn(\n                    this.cubeFaces['back'],\n                    2-row, 2,\n                    setReturn(\n                        this.cubeFaces['up'],\n                        row, 0,\n                        setReturn(\n                            this.cubeFaces['front'],\n                            row, 0,\n                            this.cubeFaces['down'][row][0]\n                        )\n                    )\n                )\n            )\n        }\n    }\n\n    front() {\n        console.log(\"cube.front\");\n        rotateClock(this.cubeFaces['front']);\n        // shift entire front side\n        \n        for (let row = 0; row <= 2; ++row) {\n            setReturn(\n                this.cubeFaces['down'],\n                0, row,\n                setReturn(\n                    this.cubeFaces['right'],\n                    2-row, 0,\n                    setReturn(\n                        this.cubeFaces['up'],\n                        2, 2-row,\n                        setReturn(\n                            this.cubeFaces['left'],\n                            row, 2,\n                            this.cubeFaces['down'][0][row]\n                        )\n                    )\n                )\n            )\n        }\n    }\n\n    frontInverted() {\n        console.log(\"cube.frontInverted\");\n        rotateAntiClock(this.cubeFaces['front']);\n        // shift entire front side\n        \n        for (let row = 0; row <= 2; ++row) {\n            setReturn(\n                this.cubeFaces['up'],\n                2, row,\n                setReturn(\n                    this.cubeFaces['right'],\n                    row, 0,\n                    setReturn(\n                        this.cubeFaces['down'],\n                        0, 2-row,\n                        setReturn(\n                            this.cubeFaces['left'],\n                            2-row, 2,\n                            this.cubeFaces['up'][2][row]\n                        )\n                    )\n                )\n            )\n        }\n    }\n\n    back() {\n        console.log(\"cube.back\");\n        rotateClock(this.cubeFaces['back']);\n        // shift entire back side\n        \n        for (let row = 0; row <= 2; ++row) {\n            setReturn(\n                this.cubeFaces['down'],\n                2, 2-row,\n                setReturn(\n                    this.cubeFaces['left'],\n                    2-row, 0,\n                    setReturn(\n                        this.cubeFaces['up'],\n                        0, row,\n                        setReturn(\n                            this.cubeFaces['right'],\n                            row, 2,\n                            this.cubeFaces['down'][2][2-row]\n                        )\n                    )\n                )\n            )\n        }\n    }\n\n    backInverted() {\n        console.log(\"cube.backInverted\");\n        rotateAntiClock(this.cubeFaces['back']);\n        // shift entire back side\n        \n        for (let row = 0; row <= 2; ++row) {\n            setReturn(\n                this.cubeFaces['up'],\n                0, 2-row,\n                setReturn(\n                    this.cubeFaces['left'],\n                    row, 0,\n                    setReturn(\n                        this.cubeFaces['down'],\n                        2, row,\n                        setReturn(\n                            this.cubeFaces['right'],\n                            2-row, 2,\n                            this.cubeFaces['up'][0][2-row]\n                        )\n                    )\n                )\n            )\n        }\n    }\n\n    up() {\n        console.log(\"cube.up\");\n        rotateClock(this.cubeFaces['up']);\n        // shift entire up side\n        \n        for (let row = 0; row <= 2; ++row) {\n            setReturn(\n                this.cubeFaces['left'],\n                0, row,\n                setReturn(\n                    this.cubeFaces['front'],\n                    0, row,\n                    setReturn(\n                        this.cubeFaces['right'],\n                        0, row,\n                        setReturn(\n                            this.cubeFaces['back'],\n                            0, row,\n                            this.cubeFaces['left'][0][row]\n                        )\n                    )\n                )\n            )\n        }\n    }\n\n    upInverted() {\n        console.log(\"cube.upInverted\");\n        rotateAnticlock(this.cubeFaces['up']);\n        // shift entire up side\n        \n        for (let row = 0; row <= 2; ++row) {\n            setReturn(\n                this.cubeFaces['left'],\n                0, row,\n                setReturn(\n                    this.cubeFaces['back'],\n                    0, row,\n                    setReturn(\n                        this.cubeFaces['right'],\n                        0, row,\n                        setReturn(\n                            this.cubeFaces['front'],\n                            0, row,\n                            this.cubeFaces['left'][0][row]\n                        )\n                    )\n                )\n            )\n        }\n    }\n\n    down() {\n        console.log(\"cube.down\");\n        rotateClock(this.cubeFaces['down']);\n        // shift entire down side\n        \n        for (let row = 0; row <= 2; ++row) {\n            setReturn(\n                this.cubeFaces['right'],\n                2, row,\n                setReturn(\n                    this.cubeFaces['front'],\n                    2, row,\n                    setReturn(\n                        this.cubeFaces['left'],\n                        2, row,\n                        setReturn(\n                            this.cubeFaces['back'],\n                            2, row,\n                            this.cubeFaces['right'][2][row]\n                        )\n                    )\n                )\n            )\n        }\n    }\n\n    downInverted() {\n        console.log(\"cube.downInverted\");\n        rotateAnticlock(this.cubeFaces['down']);\n        // shift entire down side\n        \n        for (let row = 0; row <= 2; ++row) {\n            setReturn(\n                this.cubeFaces['right'],\n                2, row,\n                setReturn(\n                    this.cubeFaces['back'],\n                    2, row,\n                    setReturn(\n                        this.cubeFaces['left'],\n                        2, row,\n                        setReturn(\n                            this.cubeFaces['front'],\n                            2, row,\n                            this.cubeFaces['right'][2][row]\n                        )\n                    )\n                )\n            )\n        }\n    }\n\n    //////////////////////////////////////////////////////////\n    // Debugging methods\n    //////////////////////////////////////////////////////////\n    get asString() {\n        let cubeString = \"\";\n        for (let face in this.cubeFaces) {\n            cubeString += \"==========\"+face + \"==========\\n\" +\n                this.getCubeFace(face) + \"\\n\";\n        }\n        return cubeString;\n    };\n\n    getCubeFace(face)  {\n        let cubeFaceArray = this.cubeFaces[face];\n        let getFormattedCubeFace = function (face) {\n            let faceString = \"\";\n            for (let i = 0; i < cubeFaceArray.length; ++i) {\n                for (let j = 0; j < cubeFaceArray[i].length; ++j) {\n                    faceString += cubeFaceArray[i][j] + \" \";\n                }\n                faceString += \"\\n\";\n            }\n            return faceString;\n        };\n        return getFormattedCubeFace(face);\n    };\n}\n"],"sourceRoot":""}